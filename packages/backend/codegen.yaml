generates:
  src/lambdas/loadSnapshotVotes/graphql/:
    documents:
      - src/lambdas/loadSnapshotVotes/**/*.ts
    schema: src/lambdas/loadSnapshotVotes/schema.graphql
    preset: client
  src/schema/resolvers/generated/types.ts:
    schema: ./src/schema/schema.graphql
    plugins:
      - '@graphql-codegen/typescript'
      - '@graphql-codegen/typescript-resolvers'
      - add:
          content: "import { ethers } from 'ethers'"
    config:
      avoidOptionals: true
      contextType: ../../context#AgoraContextType
      strictScalars: true
      scalars:
        Bytes: string
        BigInt: ethers.BigNumber
        Timestamp: Date
      mappers:
        Block: ../common#BlockModel
        Transaction: ../common#TransactionModel
        Address: ../common#AddressModel
        ResolvedName: ../common#ResolvedNameModel

        SnapshotVote: ../snapshot#SnapshotVoteModel
        SnapshotProposal: ../snapshot#SnapshotProposalModel
        SnapshotVoteChoice: ../snapshot#SnapshotVoteChoiceModel
        SnapshotVoteChoiceSingle: ../snapshot#SnapshotVoteChoiceModel
        SnapshotVoteChoiceRanked: ../snapshot#SnapshotVoteChoiceModel
        SnapshotVoteChoiceQuadratic: ../snapshot#SnapshotVoteChoiceModel
        SnapshotVoteChoiceApproval: ../snapshot#SnapshotVoteChoiceModel
        SnapshotVoteChoiceWeighted: ../snapshot#SnapshotVoteChoiceModel
        WeightedSelectedChoice: ../snapshot#WeightedSelectedChoiceModel

        VotingPower: ../governance#VotingPowerModel
        Metrics: ../governance#MetricsModel
        Delegate: ../governance#DelegateModel
        Proposal: ../governance#ProposalModel
        Vote: ../governance#VoteModel

        DelegateStatement: ../delegateStatement#DelegateStatementModel
