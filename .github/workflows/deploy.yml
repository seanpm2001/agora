name: Deploy

on:
  push:
    branches:
      - master

  workflow_dispatch:
    inputs:
      environment:
        description: "Choose an environment to deploy to: <dev|staging|prod>"
        required: true
        default: "dev"

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    name: Build Frontend
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
          cache: "yarn"

      - run: yarn install

      - run: yarn workspace nouns-agora run build
        env:
          REACT_APP_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          REACT_APP_GITHUB_SHA: ${{ github.sha }}
          REACT_APP_DEPLOY_ENV: ${{ github.event.inputs.environment || 'staging' }}
          REACT_APP_ALCHEMY_ID: ${{ secrets.ALCHEMY_KEY }}

      - uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: frontend
        with:
          sourcemaps: "./packages/frontend/build/"

      - uses: actions/upload-artifact@v3
        with:
          name: compiled-frontend
          path: packages/frontend/build

  build-backend:
    runs-on: ubuntu-latest
    name: Build Backend
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
          cache: "yarn"

      - run: yarn install

      - run: yarn workspace nouns-agora-backend run generate

      - run: yarn workspace nouns-agora-backend run build-worker

      - uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: backend
        with:
          sourcemaps: "./packages/backend/dist/"

      - uses: actions/upload-artifact@v3
        with:
          name: compiled-backend
          path: packages/backend/dist

  publish:
    runs-on: ubuntu-latest
    name: Publish

    needs:
      - build-frontend
      - build-backend

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
          cache: "yarn"

      - uses: actions/download-artifact@v3
        with:
          name: compiled-frontend
          path: packages/frontend/build

      - uses: actions/download-artifact@v3
        with:
          name: compiled-backend
          path: packages/backend/dist

      - run: yarn install

      - run: sed -i 's/yarn build-worker//' packages/backend/wrangler.toml

      - name: Copy Resources
        run: |
          mkdir -p packages/frontend/build/worker-assets

      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: ./packages/backend
          command: publish --env ${{ github.event.inputs.environment || 'staging' }} --var GITHUB_SHA:${{ github.sha }}
